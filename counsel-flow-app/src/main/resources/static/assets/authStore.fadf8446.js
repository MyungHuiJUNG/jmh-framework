import{d as n}from"./index.02f7c95d.js";import{api as i}from"./axios.816e1a60.js";import{g as o}from"./header.10137493.js";const s=(t,e)=>i.post("/rest/api/v1/auth/login",{id:t,password:e},{headers:{"date-format":"yyyy-MM-dd HH:mm:ss"}}),l=()=>i.post("/rest/api/v1/auth/logout",null,o()),r=()=>i.get("/rest/api/v1/auth/login-info",o()),a=()=>{const t=new URLSearchParams;return t.append("refreshToken",localStorage.getItem("refreshToken")),i.post("/rest/api/v1/auth/token",t,{headers:{"Content-Type":"application/x-www-form-urlencoded","date-format":"yyyy-MM-dd HH:mm:ss"}})},g={login:s,logout:l,getUserInfo:r,reproduceToken:a},I=n("authStore",{state:()=>({loggedIn:null,entityId:null,useTypeCode:null,id:null,name:null,email:null,roleGroup:null,organization:null,ctiLoginId:null,ctiLoginPassword:null,ctiExtension:null,ctiAutoLogin:!1}),actions:{login(t){return this.loggedIn=!0,this.entityId=t.entityId,this.useTypeCode=t.useTypeCode,this.id=t.id,this.name=t.name,this.email=t.email,this.roleGroup=t.roleGroup,this.organization=t.organization,this.ctiLoginId=t.ctiLoginId,this.ctiLoginPassword=t.ctiLoginPassword,this.ctiExtension=t.ctiExtension,this.ctiAutoLogin=t.ctiAutoLogin,Promise.resolve()},logout(){this.loggedIn=!1,this.entityId=null,this.useTypeCode=null,this.id=null,this.name=null,this.email=null,this.roleGroup=null,this.organization=null,this.ctiLoginId=null,this.ctiLoginPassword=null,this.ctiExtension=null,this.ctiAutoLogin=!1},getRefreshToken(){return localStorage.getItem("refreshToken")},getRefreshTokenExpiresIn(){return localStorage.getItem("refreshTokenExpiresIn")},isTokenExpired(){const t=this.getRefreshTokenExpiresIn();if(!t)return!0;const e=Date.parse(t.replace(" ","T"));return new Date().getTime()>e},getCtiAutoLogin(){return localStorage.getItem("saveCTI")==="true"},clearLoginStorage(){localStorage.removeItem("accessToken"),localStorage.removeItem("accessExpirationTime"),localStorage.removeItem("accessTokenExpiresIn"),localStorage.removeItem("refreshToken"),localStorage.removeItem("refreshExpirationTime"),localStorage.removeItem("refreshTokenExpiresIn")},async checkLoginStatus(){if(this.getRefreshToken()){if(this.isTokenExpired())return this.clearLoginStorage(),this.loggedIn=!1,this.entityId=null,this.useTypeCode=null,this.id=null,this.name=null,this.email=null,this.roleGroup=null,this.organization=null,this.ctiLoginId=null,this.ctiLoginPassword=null,this.ctiExtension=null,this.ctiAutoLogin=!1,{loggedIn:this.loggedIn,entityId:this.entityId,useTypeCode:this.useTypeCode,id:this.id,name:this.name,email:this.email,roleGroup:this.roleGroup,organization:this.organization,ctiLoginId:this.ctiLoginId,ctiLoginPassword:this.ctiLoginPassword,ctiExtension:this.ctiExtension,ctiAutoLogin:this.ctiAutoLogin};if(this.loggedIn===null)try{const t=await g.getUserInfo();this.loggedIn=!0,this.entityId=t.data.entityId,this.useTypeCode=t.data.useTypeCode,this.id=t.data.id,this.name=t.data.name,this.email=t.data.email,this.roleGroup=t.data.roleGroup,this.organization=t.data.organization,this.ctiLoginId=t.data.ctiLoginId,this.ctiLoginPassword=t.data.ctiLoginPassword,this.ctiExtension=localStorage.getItem("ctiExtension")||t.data.ctiExtension,this.ctiAutoLogin=this.getCtiAutoLogin()}catch(t){this.loggedIn=!1,this.entityId=null,this.useTypeCode=null,this.id=null,this.name=null,this.email=null,this.roleGroup=null,this.organization=null,this.ctiLoginId=null,this.ctiLoginPassword=null,this.ctiExtension=null,this.ctiAutoLogin=!1,this.clearLoginStorage(),console.log(t)}}return{loggedIn:this.loggedIn,entityId:this.entityId,useTypeCode:this.useTypeCode,id:this.id,name:this.name,email:this.email,roleGroup:this.roleGroup,organization:this.organization,ctiLoginId:this.ctiLoginId,ctiLoginPassword:this.ctiLoginPassword,ctiExtension:this.ctiExtension,ctiAutoLogin:this.ctiAutoLogin}}},getters:{}});export{g as a,I as u};
